pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
	screen_w=128-(5*8) --keep left side
	screen_h=128
	cell=8  
	colcount=11
	columns={}
	
	--columns grid map
	for i=1,colcount do
  local col={}
  col.index=i-1
  col.l=(i - 1) * cell
  col.r=col.l + cell
  col.stacks={}
  add(columns, col)
	end
	
	--player
	shooter = {
	  x = screen_w/2,
	  y = 0,  
	  w = 8,            
	  h = 8,             
	  speed = 120,      
	  color = 7          
	}
	
	balls={
	 {typ=ball,sprite=1},
  {typ=ball,sprite=2},
  {typ=ball,sprite=3},
  {typ=ball,sprite=4},
	}
	
 --generate balls
 nextballs={
  balls[flr(rnd(4)+1)]
 }
 
 nextball()
 
end
-->8
--helper
function clamp(v, a, b) 
 if v < a then 
  return a
 end 
 if v > b then 
  return b 
 end 
 
 return v 
end

--get current shooter loc
function shooter_col()
  local cx = shooter.x + shooter.w/2
  cx = clamp(cx, 0, screen_w-1)
  local col = flr(cx / cell)
  
  return col
end

function nextball()
 shooter.current=nextballs[1]
 del(nextballs,nextballs[1])
 add(nextballs, balls[flr(rnd(4)+1)])
end

function addstack(index,colr)
 local newstack={}
 newstack.color=colr
 
 add(columns[index].stacks,newstack)
 check_matches()
 nextball()
 
 
end

-->8
--update
function _update60()
  local dt = 1/60

  local vx = 0
  if btn(⬅️) then 
   vx = vx - 1
  end
  if btn(➡️) then 
   vx = vx + 1 
  end

  -- pergerakan
  shooter.x = shooter.x + vx * shooter.speed * dt

  -- batas layar
  local min_x = 0
  local max_x = screen_w - shooter.w
  shooter.x = clamp(shooter.x, min_x, max_x)

  -- snap ke grid
  if btnp(❎) then
    local col = shooter_col()
    -- letakkan center shooter di
    local target_cx = col * cell + (cell/2)
    shooter.x = clamp(target_cx - shooter.w/2, min_x, max_x)
    
    addstack(col+1, shooter.current.sprite)
  end
  
  
end
-->8
--draw
function _draw()
 cls()
 draw_grid()
 draw_shotline()
 draw_shooter()
 draw_stacks()
 draw_nextball()
 debug_col()
end

function draw_nextball()
 local start=93
 print("next",start,0,7)
 for ball in all(nextballs) do
  spr(ball.sprite,start,8)
  start+=11
 end
end

function draw_grid()
 for col in all(columns) do
  rect(col.l, 0, col.r - 1, screen_h - 1, 1)
 end
end

function draw_shotline()
 for col in all(columns) do
  local current=shooter_col()
  if col.index==current do
   rectfill(col.l,0,col.r - 1,128,1)
  end
 end
end

function draw_shooter()
 local sx = flr(shooter.x)
 local sy = flr(shooter.y)
 spr(shooter.current.sprite,sx,sy)
end

function debug_col()
-- local col=shooter_col()
-- print("col:"..col,2,2,7)
 --print(columns[1].stacks[1].color,7)
end

function draw_stacks()
 for col in all(columns) do
  if #col.stacks>0 then
	  local bottom=128-cell
	  for stack in all(col.stacks) do
	   if stack~=nil then
     spr(stack.color,col.l,bottom)
	    bottom-=cell
	   end
	  end
	 end
 end
end
-->8
--check matches
-- multiple combo
function check_matches()
	local to_remove = {}
	
	-- scan seluruh grid untuk match 3+
	for x=1,colcount do
	 for y=1,#columns[x].stacks do
	  local color = columns[x].stacks[y].color
	  if color then
	   -- arah: (dx, dy)
	  	local dirs = {
      {1, 0},  -- horizontal kanan
      {0, 1},  -- vertikal atas
      {1, 1},  -- diagonal kanan atas
      {1, -1}, -- diagonal kanan bawah
	    }
	    for dir in all(dirs) do
	     local count = 1
	     local matches = { {x,y} }

     	-- cek ke arah positif
	     local nx, ny = x + dir[1], y + dir[2]
	     while inside_grid(nx, ny) and same_color(nx, ny, color) do
	      count += 1
	      add(matches, {nx, ny})
	      nx += dir[1]
	      ny += dir[2]
	     end
	
	     -- cek ke arah negatif
	     nx, ny = x - dir[1], y - dir[2]
	     while inside_grid(nx, ny) and same_color(nx, ny, color) do
       count += 1
       add(matches, {nx, ny})
       nx -= dir[1]
       ny -= dir[2]
	     end

     -- tandai untuk dihapus
		    if count >= 3 then
		     for m in all(matches) do
		         to_remove[m[1].."_"..m[2]] = true
		     end
	     end
	     
	   end
	  end
	 end
	end
	
	-- hapus yang ditandai
	if next(to_remove) then
	    for x=1,colcount do
	        local newstack = {}
	        for y=1,#columns[x].stacks do
	            if not to_remove[x.."_"..y] then
	                add(newstack, columns[x].stacks[y])
	            end
	        end
	        columns[x].stacks = newstack
	    end
	end
end

--cek posisi dalam grid
function inside_grid(x, y)
 return x >= 1 and x <= colcount and y >= 1 and y <= #columns[x].stacks
end

--cek warna sama
function same_color(x, y, color)
 return columns[x].stacks[y] and columns[x].stacks[y].color == color
end
__gfx__
0000000000eeee0000cccc0000bbbb0000aaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000e7777e00c7777c00b7777b00a7777a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700e766667ec766667cb766667ba766667a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000e766667ec766667cb766667ba766667a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000e755557ec755557cb755557ba755557a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700e755557ec755557cb755557ba755557a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000e7777e00c7777c00b7777b00a7777a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000eeee0000cccc0000bbbb0000aaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00eeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e7777e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e766667e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e766667e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e755557e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e755557e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0e7777e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00eeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
